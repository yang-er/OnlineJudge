@model IEnumerable<StatusListModel>
@inject UserManager UserManager
@{
    ViewData["Title"] = "Realtime Judge Status";
    string uuid = UserManager.GetUserId(User);
    int uid = uuid != null ? int.Parse(uuid) : -1;
    int pg = (int)ViewData["Page"];
    bool isAdmin = User.IsInRole("Administrator");
}

<div class="container-fluid mt-4 mb-4 pl-4 pr-4">
    <div class="dropdown">
        <h2 class="d-inline-block">Realtime Status</h2>
        <button class="btn btn-outline-secondary btn-sm bowtie ml-1 mb-1" data-toggle="dropdown"
                aria-haspopup="true" aria-expanded="false" id="filter-toggle">
            <i class="bowtie-search-filter"></i>
        </button>

        <div class="dropdown-menu" aria-labelledby="filter-toggle">
            <form asp-action="List" method="get">
                <div class="m-2 p-2">
                    <select class="form-control form-control-sm mt-0" name="status">
                        <option value="">All verdicts</option>
                        <option value="0">Unknown</option>
                        <option value="11">Accepted</option>
                        <option value="5">Wrong Answer</option>
                        <option value="6">Compile Error</option>
                        <option value="3">Runtime Error</option>
                        <option value="1">Time Limit Exceeded</option>
                        <option value="2">Memory Limit Exceeded</option>
                        <option value="4">Output Limit Exceeded</option>
                        <option value="8">Pending</option>
                        <option value="9">Running</option>
                        <option value="10">Undefined Error</option>
                    </select>

                    <input class="form-control form-control-sm mt-2" placeholder="Problem ID" name="pid" />

                    <select class="form-control form-control-sm mt-2" name="lang">
                        <option value="">All languages</option>
                        <option value="c">C</option>
                        <option value="cpp">C++</option>
                        <option value="java">Java</option>
                        <option value="python2">Python 2</option>
                        <option value="python3">Python 3</option>
                        <option value="pascal">Pascal</option>
                        <option value="csharp">C#</option>
                        <option value="kotlin">Kotlin</option>
                        <option value="haskell">Haskell</option>
                        <option value="pl">Perl</option>
                        <option value="f95">Fortran</option>
                    </select>

                    <input class="form-control form-control-sm mt-2" placeholder="User ID" name="uid" />

                    <input type="submit" class="btn btn-primary btn-sm mt-2" name="filter" value="filter" />
                </div>
            </form>
        </div>
    </div>
    <h5 class="mb-3">Previous judge submissions</h5>
    
    

    <table class="table table-responsive-lg">
        <thead>
            <tr>
                <th style="width:8%;min-width:80px" scope="col">#</th>
                <th style="width:18%;min-width:200px;max-width:200px" scope="col">Submit Time</th>
                <th style="width:20%;min-width:200px" scope="col" class="dropdown">Verdict</th>
                <th style="width:6%;min-width:80px" scope="col" class="dropdown">Prob</th>
                <th style="width:10%;min-width:100px" scope="col">Exe.Time</th>
                <th style="width:10%;min-width:100px" scope="col">Exe.Mem</th>
                <th style="width:10%;min-width:100px" scope="col">Code Len</th>
                <th style="width:8%;min-width:100px" scope="col" class="dropdown">Lang</th>
                <th style="width:10%;min-width:100px" scope="col" class="dropdown">Author</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <th scope="row">@(item.SubmissionId)</th>
                    <td>@Html.CstTime(item.Time.DateTime)</td>
                    <td><verdict target="StatusText" value="@item.Status" /></td>
                    <td><a asp-area="Judge" asp-controller="Problem" asp-action="View" asp-route-pid="@item.ProblemId">@item.ProblemId</a></td>
                    <td>@(item.ExecuteTime)ms</td>
                    <td>@(item.ExecuteMemory)k</td>
                    <td>
                        @if (isAdmin || (item.ContestId == 0 && item.Author == uid) || User.IsInRole("AuthorOfProblem" + item.ProblemId))
                        {
                            <a asp-action="View" asp-route-id="@item.SubmissionId">@(item.CodeLength)B</a>
                        }
                        else
                        {
                            @(item.CodeLength + "B")
                        }
                    </td>
                    <td>@item.Language</td>
                    <td>
                        @if (item.UserName == null)
                        {
                            <a>SYSTEM</a>
                        }
                        else
                        {
                            <a asp-area="Account" asp-controller="Profile" asp-action="View" asp-route-uid="@item.Author">@item.UserName</a>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <nav aria-label="...">
        <ul class="pagination">
            @if (pg == 1)
            {
                <li class="page-item disabled"><span class="page-link">&laquo;</span></li>
                <li class="page-item active" aria-current="page">
                    <span class="page-link">
                        1
                        <span class="sr-only">(current)</span>
                    </span>
                </li>
            }
            else
            {
                <li class="page-item"><a class="page-link" asp-all-route-data="@ViewBag.Filter" asp-route-pg="">&laquo;</a></li>
                @if (pg > 3 || pg < 0) { <li class="page-item"><a class="page-link" asp-all-route-data="@ViewBag.Filter" asp-route-pg="@(pg-3)">@(pg-3)</a></li> }
                @if (pg > 2 || pg < 0) { <li class="page-item"><a class="page-link" asp-all-route-data="@ViewBag.Filter" asp-route-pg="@(pg-2)">@(pg-2)</a></li> }
                <li class="page-item"><a class="page-link" asp-all-route-data="@ViewBag.Filter" asp-route-pg="@(pg-1)">@(pg-1)</a></li>
                <li class="page-item active" aria-current="page">
                    <span class="page-link">
                        @pg
                        <span class="sr-only">(current)</span>
                    </span>
                </li>
            }

            @if (pg == -1)
            {
                <li class="page-item disabled"><span class="page-link">&raquo;</span></li>
            }
            else
            {
                <li class="page-item"><a class="page-link" asp-all-route-data="@ViewBag.Filter" asp-route-pg="@(pg+1)">@(pg+1)</a></li>
                @if (pg < -2 || pg >= 0) { <li class="page-item"><a class="page-link" asp-all-route-data="@ViewBag.Filter" asp-route-pg="@(pg+2)">@(pg+2)</a></li> }
                @if (pg < -3 || pg >= 0) { <li class="page-item"><a class="page-link" asp-all-route-data="@ViewBag.Filter" asp-route-pg="@(pg+3)">@(pg+3)</a></li> }
                <li class="page-item"><a class="page-link" asp-all-route-data="@ViewBag.Filter" asp-route-pg="-1">&raquo;</a></li>
            }
        </ul>
    </nav>
</div>
