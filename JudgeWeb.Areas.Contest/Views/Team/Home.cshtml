@model ScoreboardSingleViewModel
@{
    ViewData["Title"] = "Team";
    ViewData["RefreshAfter"] = "setFlashAndProgress";
    ViewData["RefreshBefore"] = "saveFlash";
    bool inajax = ViewData.ContainsKey("InAjax");

    if (inajax)
    {
        Layout = null;
        Contest cont = ViewBag.Contest;
        var initial = DateTimeOffset.Now.ToUnixTimeMilliseconds();
        var now = initial / 1000;
        var startTime = cont.StartTime is null ? -1 : cont.StartTime.Value.ToUnixTimeSeconds();
        var endTime = cont.EndTime is null ? -1 : cont.EndTime.Value.ToUnixTimeSeconds();
        var prog = startTime == -1 || initial / 1000 < startTime ? 0
            : now >= endTime ? 100 : (now - startTime) * 100 / (endTime - startTime);
        <partial name="_ProgressBar" model="prog" />
    }
}

@if ((Model.Contest.StartTime ?? DateTimeOffset.MaxValue) > DateTimeOffset.Now)
{
    <h1 id="teamwelcome" class="text-center">Welcome team <span id="teamwelcometeam">@Model.Team.TeamName</span>!</h1>
    <h2 id="contestnotstarted" class="text-center">@(Model.Contest.StartTime.HasValue ? string.Format("Contest scheduled to start on {0:R}", Model.Contest.StartTime.Value).Replace("GMT", "CST") : "Contest has been delayed")</h2>
}
else
{
    <div id="teamscoresummary">
        <partial name="_ScoreBoard" model="Model" />
    </div>

    <div class="mt-4" data-flash-messages>
        <partial name="_StatusMessage" model="Model.MessageInfo" />
    </div>

    <div class="row">
        <div class="col-md col-12">
            <h3 class="teamoverview">Submissions</h3>
            @if (Model.Submissions.Count == 0)
            {
                <div class="alert alert-warning">No submissions</div>
            }
            else
            {
                <table class="data-table table table-hover table-striped table-sm submissions-table">
                    <thead class="thead-light">
                        <tr>
                            <th scope="col">time</th>
                            <th scope="col">problem</th>
                            <th scope="col">lang</th>
                            <th scope="col">result</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var submit in Model.Submissions)
                        {
                            var t = submit.Time.ToLocalTime();
                            var b = !Model.Contest.EndTime.HasValue || t.DateTime < Model.Contest.EndTime;
                            <tr asp-action="Submission" asp-route-sid="@submit.SubmissionId" data-toggle="ajaxWindow" data-target="submission" class="unseen" id="submit_@submit.SubmissionId">
                                <td use-a>@t.ToString("HH:mm")</td>
                                <td use-a class="probid" title="@submit.ProblemName">@submit.ProblemShortName</td>
                                <td use-a class="langid">@submit.Language</td>
                                <td use-a><verdict target="DomJudge" value="@submit.Verdict" too-late="!b" /></td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
        <div class="col-md col-12">
            <h3 class="teamoverview">Clarifications</h3>
            @if (Model.ReceivedClarifications.Count() == 0)
            {
                <p class="nodata">No clarifications.</p>
            }
            else
            {
                <div class="table-wrapper">
                    <table class="data-table table table-striped table-hover table-sm" style="width:100%;">
                        <thead class="thead-light">
                            <tr>
                                <th scope="col">time</th>
                                <th scope="col">from</th>
                                <th scope="col">to</th>
                                <th scope="col">subject</th>
                                <th scope="col">text</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var clar in Model.ReceivedClarifications)
                            {
                                var prob = Model.Problems.FirstOrDefault(c => c.ProblemId == clar.ProblemId);
                                <tr asp-action="Clarification" asp-route-op="@clar.ClarificationId" data-toggle="ajaxWindow" data-target="recv-clar" class="unseen" id="clar_@clar.ClarificationId">
                                    <td use-a>@clar.SubmitTime.ToString("HH:mm")</td>
                                    <td use-a>Jury</td>
                                    <td use-a>@(clar.Recipient.HasValue ? Model.Team.TeamName : "All")</td>
                                    <td use-a>@clar.Category @prob?.ShortName issue</td>
                                    <td use-a>@foreach (var line in clar.Body.Split('\n').Where(s => !string.IsNullOrWhiteSpace(s) && !s.StartsWith('>')))
                                    {@line}</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }

            <h3 class="teamoverview">Clarification Requests</h3>
            @if (Model.RequestedClarifications.Count() == 0)
            {
                <p class="nodata">No clarification request.</p>
            }
            else
            {
                <div class="table-wrapper">
                    <table class="data-table table table-striped table-hover table-sm" style="width:100%;">
                        <thead class="thead-light">
                            <tr>
                                <th scope="col">time</th>
                                <th scope="col">from</th>
                                <th scope="col">to</th>
                                <th scope="col">subject</th>
                                <th scope="col">text</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var clar in Model.RequestedClarifications)
                            {
                                var prob = Model.Problems.FirstOrDefault(c => c.ProblemId == clar.ProblemId);
                                <tr asp-action="Clarification" asp-route-op="@clar.ClarificationId" data-toggle="ajaxWindow" data-target="sent-clar">
                                    <td use-a>@clar.SubmitTime.ToString("HH:mm")</td>
                                    <td use-a>@Model.Team.TeamName</td>
                                    <td use-a>Jury</td>
                                    <td use-a>@clar.Category @prob?.ShortName issue</td>
                                    <td use-a>@foreach (var line in clar.Body.Split('\n').Where(s => !string.IsNullOrWhiteSpace(s) && !s.StartsWith('>')))
                                    {@line}</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }

            <div class="m-1">
                <a asp-action="Clarification" asp-route-op="add" class="btn btn-secondary btn-sm" data-toggle="ajaxWindow" data-target="submission">
                    request clarification
                </a>
            </div>
        </div>
    </div>
}

@if (!inajax)
{
    @section Scripts {
        <script>
            $(function () {
                var seenSub = getSeenSubmissions();
                for (var i = 0; i < seenSub.length; i++)
                    $('#submit_' + seenSub[i]).removeClass('unseen');
                var seenClar = getSeenClarification();
                for (var i = 0; i < seenClar.length; i++)
                    $('#clar_' + seenClar[i]).removeClass('unseen');
            });
        </script>
        <script>
            var $flash = null;

            function getSeenSubmissions() {
	            var cookieVal = getCookie("xylab_submission_seen_at_cid_@Model.Contest.ContestId");
	            if (cookieVal === null || cookieVal === "") {
		            return new Array();
	            }
	            return JSON.parse(cookieVal);
            }

            function getSeenClarification() {
	            var cookieVal = getCookie("xylab_clarification_seen_at_cid_@Model.Contest.ContestId");
	            if (cookieVal === null || cookieVal === "") {
		            return new Array();
	            }
	            return JSON.parse(cookieVal);
            }

            function saveFlash() {
                $flash = $('[data-flash-messages]').children();
            }

            function setSeenSub(sub) {
                $('#submit_' + sub).removeClass('unseen');
                var seenSubmissions = getSeenSubmissions();
                if (seenSubmissions.indexOf(sub) == -1)
                    seenSubmissions.push(sub);
                var cookieVal = JSON.stringify(seenSubmissions);
	            setCookie("xylab_submission_seen_at_cid_@Model.Contest.ContestId", cookieVal);
            }

            function setSeenClar(clar) {
                $('#clar_' + clar).removeClass('unseen');
                var seenClaris = getSeenClarification();
                if (seenClaris.indexOf(clar) == -1)
                    seenClaris.push(clar);
                var cookieVal = JSON.stringify(seenClaris);
	            setCookie("xylab_clarification_seen_at_cid_@Model.Contest.ContestId", cookieVal);
            }

            function setFlashAndProgress() {
                var $newProgress = $('[data-ajax-refresh-target] > [data-progress-bar]');
                if ($newProgress.length) {
                    var $oldProgress = $('body > [data-progress-bar]');
                    $oldProgress.html($newProgress.children());
                    $newProgress.remove();
                }

                $('[data-flash-messages]').html($flash);

                var seenSub = getSeenSubmissions();
                for (var i = 0; i < seenSub.length; i++)
                    $('#submit_'+seenSub[i]).removeClass('unseen');
                var seenClar = getSeenClarification();
                for (var i = 0; i < seenClar.length; i++)
                    $('#clar_'+seenClar[i]).removeClass('unseen');
            }

            function markSeen($elem) {
                $elem.closest('tr').removeClass('unseen');
            }
        </script>
        <style>

            .data-table td a, .data-table td a:hover {
                display: block;
                text-decoration: none;
                color: inherit;
                padding: 3px 5px;
            }

            .data-table tr {
                border-bottom: 1px solid silver;
            }

                .data-table tr:hover {
                    background: #ffffcc !important;
                }
        </style>
    }
}